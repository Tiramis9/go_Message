// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rmon_service.proto

package rmon_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReturnValue int32

const (
	ReturnValue_SUCCESS     ReturnValue = 0
	ReturnValue_VALUE_ERRPR ReturnValue = 1
)

var ReturnValue_name = map[int32]string{
	0: "SUCCESS",
	1: "VALUE_ERRPR",
}

var ReturnValue_value = map[string]int32{
	"SUCCESS":     0,
	"VALUE_ERRPR": 1,
}

func (x ReturnValue) String() string {
	return proto.EnumName(ReturnValue_name, int32(x))
}

func (ReturnValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9651621eada09e99, []int{0}
}

// The request message containing the user's name.
type CustomerRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PackageSpeed         int64    `protobuf:"varint,2,opt,name=package_speed,json=packageSpeed,proto3" json:"package_speed,omitempty"`
	PackageSize          int64    `protobuf:"varint,3,opt,name=package_size,json=packageSize,proto3" json:"package_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerRequest) Reset()         { *m = CustomerRequest{} }
func (m *CustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerRequest) ProtoMessage()    {}
func (*CustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9651621eada09e99, []int{0}
}

func (m *CustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerRequest.Unmarshal(m, b)
}
func (m *CustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerRequest.Marshal(b, m, deterministic)
}
func (m *CustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerRequest.Merge(m, src)
}
func (m *CustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerRequest.Size(m)
}
func (m *CustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerRequest proto.InternalMessageInfo

func (m *CustomerRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CustomerRequest) GetPackageSpeed() int64 {
	if m != nil {
		return m.PackageSpeed
	}
	return 0
}

func (m *CustomerRequest) GetPackageSize() int64 {
	if m != nil {
		return m.PackageSize
	}
	return 0
}

// The response message containing the greetings
type ServiceReply struct {
	ResultInfo           ReturnValue `protobuf:"varint,1,opt,name=result_info,json=resultInfo,proto3,enum=rmon_service.ReturnValue" json:"result_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ServiceReply) Reset()         { *m = ServiceReply{} }
func (m *ServiceReply) String() string { return proto.CompactTextString(m) }
func (*ServiceReply) ProtoMessage()    {}
func (*ServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9651621eada09e99, []int{1}
}

func (m *ServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceReply.Unmarshal(m, b)
}
func (m *ServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceReply.Marshal(b, m, deterministic)
}
func (m *ServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceReply.Merge(m, src)
}
func (m *ServiceReply) XXX_Size() int {
	return xxx_messageInfo_ServiceReply.Size(m)
}
func (m *ServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceReply proto.InternalMessageInfo

func (m *ServiceReply) GetResultInfo() ReturnValue {
	if m != nil {
		return m.ResultInfo
	}
	return ReturnValue_SUCCESS
}

func init() {
	proto.RegisterEnum("rmon_service.ReturnValue", ReturnValue_name, ReturnValue_value)
	proto.RegisterType((*CustomerRequest)(nil), "rmon_service.CustomerRequest")
	proto.RegisterType((*ServiceReply)(nil), "rmon_service.ServiceReply")
}

func init() { proto.RegisterFile("rmon_service.proto", fileDescriptor_9651621eada09e99) }

var fileDescriptor_9651621eada09e99 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x1c, 0x44, 0xdb, 0x14, 0x2c, 0xfc, 0x36, 0xb6, 0x65, 0x4f, 0xb1, 0x20, 0x68, 0xbc, 0x88, 0x42,
	0x0f, 0xf5, 0xe6, 0x4d, 0xd2, 0x20, 0x29, 0x0a, 0xb2, 0x4b, 0x7a, 0x0d, 0xb1, 0x9d, 0x96, 0x60,
	0x9a, 0x8d, 0xfb, 0x47, 0xb0, 0x9f, 0x5e, 0x4c, 0x55, 0x12, 0xaf, 0x33, 0x0f, 0xde, 0x30, 0xc4,
	0xf5, 0x5e, 0x55, 0x99, 0x81, 0xfe, 0x28, 0xd6, 0x98, 0xd5, 0x5a, 0x59, 0xc5, 0xfd, 0x76, 0x16,
	0x16, 0x34, 0x8e, 0x9c, 0xb1, 0x6a, 0x0f, 0x2d, 0xf0, 0xee, 0x60, 0x2c, 0x1f, 0x91, 0x97, 0x2c,
	0x82, 0xfe, 0x45, 0xff, 0x7a, 0x20, 0xbc, 0x64, 0xc1, 0xaf, 0xe8, 0xb4, 0xce, 0xd7, 0x6f, 0xf9,
	0x0e, 0x99, 0xa9, 0x81, 0x4d, 0xe0, 0x35, 0x95, 0xff, 0x13, 0xca, 0xef, 0x8c, 0x5f, 0x92, 0xff,
	0x07, 0x15, 0x07, 0x04, 0x83, 0x86, 0x61, 0xbf, 0x4c, 0x71, 0x40, 0xb8, 0x24, 0x5f, 0x1e, 0xad,
	0x02, 0x75, 0xf9, 0xc9, 0xef, 0x89, 0x69, 0x18, 0x57, 0xda, 0xac, 0xa8, 0xb6, 0xaa, 0x11, 0x8e,
	0xe6, 0x67, 0xb3, 0xce, 0x64, 0x01, 0xeb, 0x74, 0xb5, 0xca, 0x4b, 0x07, 0x41, 0x47, 0x3a, 0xa9,
	0xb6, 0xea, 0xe6, 0x96, 0x58, 0xab, 0xe2, 0x8c, 0x86, 0x32, 0x8d, 0xa2, 0x58, 0xca, 0x49, 0x8f,
	0x8f, 0x89, 0xad, 0x1e, 0x9e, 0xd2, 0x38, 0x8b, 0x85, 0x78, 0x11, 0x93, 0xfe, 0x3c, 0xa5, 0xe1,
	0xa3, 0x06, 0x2c, 0x34, 0x5f, 0x12, 0x93, 0xa8, 0x36, 0xcf, 0x30, 0x26, 0xdf, 0x81, 0x9f, 0x77,
	0x6d, 0xff, 0x9e, 0x98, 0x4e, 0xbb, 0x75, 0x7b, 0x7d, 0xd8, 0x7b, 0x3d, 0x69, 0xfe, 0xbc, 0xfb,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x27, 0xdf, 0xee, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SendMessage(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*ServiceReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SendMessage(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*ServiceReply, error) {
	out := new(ServiceReply)
	err := c.cc.Invoke(ctx, "/rmon_service.Greeter/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SendMessage(context.Context, *CustomerRequest) (*ServiceReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rmon_service.Greeter/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SendMessage(ctx, req.(*CustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rmon_service.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Greeter_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rmon_service.proto",
}
